% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistics-utils.R
\name{cor_test_multi}
\alias{cor_test_multi}
\title{Test for Correlation Between Paired Samples for 2 or More Variables}
\usage{
cor_test_multi(
  .data,
  ...,
  .pvalues = FALSE,
  .ci = FALSE,
  .as_matrix = TRUE,
  .omit_redundancies = FALSE,
  .method = "pearson"
)
}
\arguments{
\item{.data}{A data frame.}

\item{...}{Variables for which the correlation coefficient should be returned.
If no variable name is provided, correlations will be returned for all numeric
variables in \code{.data}.}

\item{.pvalues}{logical If FALSE (default), p-values will be omitted from the
output. If TRUE, p-values will be included in the output.}

\item{.ci}{logical If FALSE (default), 95\% confidence interval bounds will be
omitted from the output. If TRUE, 95\% confidence interval bounds will be
included in the output.}

\item{.as_matrix}{logical If TRUE (default), results will be return as matrix.
If TRUE, results will be returned as tibble.}

\item{.omit_redundancies}{logical If FALSE (default), all n^2 correlations
will be include in the output. If TRUE, only unique correlations will be
returned (x ~ y but not y ~ x) and correlation of a variable with itself will
be omitted.}

\item{.method}{A character string indicating which correlation coefficient
is to be used: "pearson", "kendall", or "spearman". Default method is "pearson".}
}
\value{
By default a matrix with correlation coefficients. Output format and included statistics
can be changed in the argument settings.
}
\description{
This function is a wrapper around \code{\link[stats:cor.test]{stats::cor.test()}}.
It implements the Pearson's correlation test that tests the null hypothesis
that two or more paired samples of values are unrelated.
This function can be applied to two or more numeric variables in the provided data.
}
\examples{
# Calculate the correlations between all numeric variables in the `faithfulfaces` data.
cor_test_multi(faithfulfaces)
# Calculate the correlations between the 1st, 2nd and 4th variable.
cor_test_multi(faithfulfaces, c(1,2,4))
# Calculate the correlations between `sex_dimorph`, `attractive`, and `trustworthy`.
cor_test_multi(faithfulfaces, sex_dimorph, attractive, trustworthy)
# Calculate all correlations and return p-values and 95\% confidence intervals.
cor_test_multi(faithfulfaces, .pvalues = TRUE, .ci = TRUE)
# Calculate all correlations with p-values and 95\% confidence intervals and 
# return results as table with only unique pairs of the off-diagonal correlations.
cor_test_multi(faithfulfaces, .pvalues = TRUE, .ci = TRUE, .as_matrix = FALSE, 
.omit_redundancies = TRUE)
}
