% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrangling-utils.R
\name{rename_with_seq}
\alias{rename_with_seq}
\title{Rename selected columns as a sequence}
\usage{
rename_with_seq(data_df, col_selector, prefix = "var")
}
\arguments{
\item{data_df}{A data frame}

\item{col_selector}{A tidy selector, e.g. \code{contains('foo')},
\code{ends_with('bar')}.}

\item{prefix}{The prefix for the sequence, e.g. 'drug' to produce names like
\code{drug_1}, \code{drug_2} etc.}
}
\value{
A data frame with renamed columns
}
\description{
This function will rename a selection of columns as, for
example, \code{var_1}, \code{var_2}, \code{var_2} ... \code{var_10}, where the prefix, \code{var} in
this example, is arbitrary.
}
\details{
If we had, for example, a data frame where columns were the names of
drugs and we wanted to rename these columns something like \code{drug_1},
\code{drug_2}, ..., this would be easy to do with \link[dplyr]{rename} if there
were just a few columns to rename. When there are more than just a few,
individual renaming is somewhat tedious and error prone. We can use
\link[dplyr]{rename_with} to do this in one operation. However, the code
for doing so is not very simple and would require some proficiency in R and
\code{tidyverse}. This function is essentially just a wrapper to a \code{rename_with}
function to allow the renaming to be done in one simple command.
}
\examples{
data_df <- readr::read_csv('
subject, age, gender, Aripiprazole, Clozapine, Olanzapine, Quetiapine
A, 27, F, 20, 10, 40, 25
B, 23, M, 21, 21, 35, 27
')

rename_with_seq(data_df, col_selector = Aripiprazole:Quetiapine, prefix = 'drug')
}
